directive @embedded on OBJECT
directive @collection(name: String!) on OBJECT
directive @index(name: String!) on FIELD_DEFINITION
directive @resolver(
    name: String
    paginated: Boolean! = false
) on FIELD_DEFINITION
directive @relation(name: String) on FIELD_DEFINITION
directive @unique(index: String) on FIELD_DEFINITION
type AdhaarInfo {
    DOB: String!
    aadharNumber: String!
    _id: ID!
    address: String!
    owner: User!
    _ts: Long!
}

input AdhaarInfoInput {
    aadharNumber: String!
    address: String!
    DOB: String!
    owner: AdhaarInfoOwnerRelation
}

input AdhaarInfoOwnerRelation {
    create: UserInput
    connect: ID
    disconnect: Boolean
}

scalar Date

scalar Long

type Mutation {
    updateUser(
        id: ID!
        data: UserInput!
    ): User
    createUser(data: UserInput!): User!
    updateAdhaarInfo(
        id: ID!
        data: AdhaarInfoInput!
    ): AdhaarInfo
    deleteUser(id: ID!): User
    deleteAdhaarInfo(id: ID!): AdhaarInfo
    createAdhaarInfo(data: AdhaarInfoInput!): AdhaarInfo!
}

type Query {
    findAdhaarInfoByID(id: ID!): AdhaarInfo
    findUserByID(id: ID!): User
    adhaar: AdhaarInfo
}

scalar Time

type User {
    name: String
    orgName: String
    email: String!
    _id: ID!
    type: userType!
    adhaar: AdhaarInfo
    _ts: Long!
}

input UserAdhaarRelation {
    create: AdhaarInfoInput
    connect: ID
}

input UserInput {
    email: String!
    orgName: String
    type: userType!
    adhaar: UserAdhaarRelation
}

enum userType {
    organization
    consumer
    vendor
}

